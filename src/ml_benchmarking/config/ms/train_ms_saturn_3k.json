{
  "mode": "train",

  "wandb_project_name": "multispecies_04Jan2025_v2_3k_100k",

  "run_save_dir": "/home/ubuntu/paper_repo/bascvi/src/ml_benchmarking/runs/multispecies_04Jan2025_v2_3k/",

  "datamodule": {
    "class_name": "TileDBSomaIterDataModule",
    "options": {
      "soma_experiment_uri": "/home/ubuntu/paper_repo/bascvi/data/corpora/multispecies_04Jan2025_v2",
      "barcodes_to_use_path": "/home/ubuntu/paper_repo/bascvi/data/barcode_lists/multispecies_04Jan2025_v2_train_barcodes_100k.pkl",
      "genes_to_use_path": "/home/ubuntu/paper_repo/bascvi/data/gene_lists/multispecies_04Jan2025_v2_genes_to_use_macrogenes.txt",
      "block_size": 5000,
      "random_seed": 1,
      "dataloader_args": {
        "batch_size": 128,
        "num_workers": 8,
        "pin_memory": true
      },
      "batch_keys": {
        "modality": "scrnaseq_protocol",
        "study": "study_name",
        "sample": "sample_name"
      }
    }
  },
  "emb_trainer": {
    "module_name": "bascvi",
    "class_name": "BAScVI",
    "use_macrogenes": true,
    "macrogene_method": "saturn",
    "macrogene_matrix_path": "/home/ubuntu/paper_repo/bascvi/data/gene_embeddings/ESM2_phenomic/3k_centroid_distance_matrix_multispecies_04Jan2025_v2.npy",

    "freeze_macrogene_matrix": true,
    "model_args": {
      "n_hidden": 512,
      "n_latent": 10,
      "n_layers": 3,

      "scaling_factor": 10000.0,
      "init_weights": true,
      "use_library": true,
      "use_batch_encoder": true,
      "normalize_total": false,
      "log_variational": true
    },
    "training_args": {
      "train_library": true,

      "kl_loss_weight": 0.01,
      "disc_loss_weight": 10.0,


      "n_steps_discriminator_warmup": 1000000,
      "sigmoidal_disc_warmup": true, 

      "save_validation_umaps": true,
      "run_validation_metrics": false,

      "vae_optimizer": {
        "lr": 1e-4,
        "weight_decay": 1e-5
      },
      "discriminator_optimizer": {
        "lr": 1e-4,
        "weight_decay": 1e-5
      },

      "train_adversarial": true
    },
    "callbacks_args": {
      "model_checkpoint": {
        "monitor": "val_loss/loss",
        "mode": "min"
      },
      "early_stopping": {
        "monitor": "val_loss/loss",
        "patience": 5,
        "mode": "min"
      }
    }
  },
  "pl_trainer": {
    "check_val_every_n_epoch": 1
  }
}
