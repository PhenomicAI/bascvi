{
    "mode": "train",

    "wandb_project_name": "multispecies_04Jan2025_3k",
    
    "datamodule": {
        "class_name": "TileDBSomaIterDataModule",
        "options": {
            "soma_experiment_uri": "/home/ubuntu/paper_repo/bascvi/data/corpora/multispecies_04Jan2025",
            "barcodes_to_use_path": "/home/ubuntu/paper_repo/bascvi/data/barcode_lists/multispecies_04Jan2025_train_barcodes.pkl",
            "genes_to_use_path": "/home/ubuntu/paper_repo/bascvi/data/gene_lists/multispecies_04Jan2025_genes_to_use_macrogenes.txt",
            "block_size": 1000,
            "random_seed": 42,
            "dataloader_args": {
                "batch_size": 128,
                "num_workers": 16,
                "pin_memory": true
            },
            "batch_keys": {"modality": "scrnaseq_protocol", "study": "study_name", "sample": "sample_idx"}
        }
    },
    "emb_trainer": {
        "module_name": "bascvi",
        "class_name": "BAScVI",
        "use_macrogenes": true,
        "macrogene_method": "saturn",
        "macrogene_matrix_path": "/home/ubuntu/paper_repo/bascvi/data/gene_embeddings/ESM2_phenomic/3k_centroid_distance_matrix_multispecies_04Jan2025.npy",
        
        "freeze_macrogene_matrix": true,
        "model_args": {
            "n_hidden": 512,
            "n_latent": 10,
            "n_layers": 2,
            "scaling_factor": 10000.0,
            "init_weights": true,
            "use_library": true,
            "use_batch_encoder": true,
            "normalize_total": false,
            "log_variational": true
        },
        "training_args": {
            "n_steps_discriminator_warmup": 40000,
            "disc_loss_weight": 5000.0,
            "kl_loss_weight": 1.0,
            "save_validation_umaps": true,
            "optimizer": {
                "lr": 7e-5,
                "weight_decay": 2e-6
            },
            "step_lr_scheduler": {
                "step_size": 10,
                "gamma": 0.5
            },
            "train_library": true,
            "train_adversarial": true
        },
        "callbacks_args": {
            "model_checkpoint": {
                "monitor": "val_loss",
                "mode": "min"
            },
            "early_stopping": {
                "monitor": "val_loss",
                "patience": 5,
                "mode": "min"
            }
        }
    },
    "pl_trainer": {
        "check_val_every_n_epoch": 2
    }
}
